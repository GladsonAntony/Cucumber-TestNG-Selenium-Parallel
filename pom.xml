<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gladson</groupId>
	<artifactId>SeleniumCucumberTestNG</artifactId>
	<packaging>jar</packaging>
	<name>Example Java TestNG Cucumber parallel test executor</name>
	<version>1.0</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<compiler.version>1.8</compiler.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<testng.version>6.14.2</testng.version>
		<aspectj.version>1.8.13</aspectj.version>
		<slf4j.version>1.7.24</slf4j.version>
		<allure.version>1.5.4</allure.version>
		<apachepoi.version>3.13</apachepoi.version>
		<hamcrest.version>1.3</hamcrest.version>
		<surefire.fork.count>2</surefire.fork.count>
		<selenium.version>3.11.0</selenium.version>
		<cucumber.version>2.4.0</cucumber.version>
		<webdrivermanager.version>2.1.0</webdrivermanager.version>
		<phantonjsdriver.version>1.4.4</phantonjsdriver.version>
	</properties>

	<dependencies>

		<!-- TestNG Dependency -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
		</dependency>


		<!-- Hamcrest Matchers Dependency -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>


		<!-- ASPECTJ Tools Dependency -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>


		<!-- ASPECTJ Run Time Dependency -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>


		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.2</version>
		</dependency>


		<!-- SLF4J API Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J Log4j Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J jull-2-SLL4J Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J jcl-over-SL4J Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- YANDEX QATools Properties Dependency -->
		<dependency>
			<groupId>ru.yandex.qatools.properties</groupId>
			<artifactId>properties-loader</artifactId>
			<version>1.5</version>
		</dependency>


		<!-- Allure Java Annotations Dependency -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-java-annotations</artifactId>
			<version>${allure.version}</version>
		</dependency>


		<!-- Allure Java Properties Dependency -->
		<dependency>
			<groupId>ru.qatools.commons</groupId>
			<artifactId>properties</artifactId>
			<version>2.0.RC6</version>
		</dependency>


		<!-- Allure TestNG Adapter -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-testng-adaptor</artifactId>
			<version>${allure.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- Joda Date-Time Dependency -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.7</version>
		</dependency>


		<!-- Apache POI Dependency -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache POI-OOXML Dependency -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache POI-OOXML SCHEMAS Dependency -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache OOXML SCHEMAS Dependency -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>1.3</version>
		</dependency>


		<!-- Apache XML BEANS Dependency -->
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.6.0</version>
		</dependency>


		<!-- Selenium Dependency -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>


		<!-- Cucumber-JVM Maven Dependency -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-jvm</artifactId>
			<version>2.4.0</version>
			<type>pom</type>
		</dependency>


		<!-- Cucumber Java Maven Dependency -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
		</dependency>


		<!-- Cucumber Core Maven Dependency -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>${cucumber.version}</version>
		</dependency>


		<!-- Cucumber Pico-Container Maven Dependency -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-picocontainer</artifactId>
			<version>2.4.0</version>
		</dependency>


		<!-- Cucumber TestNG Maven Dependency -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-testng</artifactId>
			<version>${cucumber.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Commons-IO Maven Dependency -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>


		<!-- LOG4J Core Dependency -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.10.0</version>
		</dependency>

		<!-- Google Json-Simple Dependency -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- Webdriver Manager Dependency -->
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>${webdrivermanager.version}</version>
		</dependency>


		<!-- Allure Cucumber-JVM Adapter -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-cucumber-jvm-adaptor</artifactId>
			<version>1.6.4</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>


		<!-- AShot Maven Dependency -->
		<dependency>
			<groupId>ru.yandex.qatools.ashot</groupId>
			<artifactId>ashot</artifactId>
			<version>1.5.4</version>
		</dependency>


		<!-- Selenium Shutterbag Maven Dependency -->
		<dependency>
			<groupId>com.assertthat</groupId>
			<artifactId>selenium-shutterbug</artifactId>
			<version>0.7</version>
		</dependency>


		<!--Automation Remarks TestNG Video Recorder Maven Dependency -->
		<dependency>
			<groupId>com.automation-remarks</groupId>
			<artifactId>video-recorder-testng</artifactId>
			<version>1.7</version>
		</dependency>


		<!-- Phantom JS Driver Maven Dependency -->
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>${phantonjsdriver.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${compiler.version}</source>
					<target>${compiler.version}</target>
				</configuration>
			</plugin>

			<!-- Maven Surefire Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<argLine>
						-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar
						-Dcucumber.options="--plugin
						ru.yandex.qatools.allure.cucumberjvm.AllureReporter"
					</argLine>
					<reuseForks>false</reuseForks>
					<argLine>-Duser.language=en</argLine>
					<argLine>-Xmx1024m</argLine>
					<argLine>-XX:MaxPermSize=256m</argLine>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<useFile>false</useFile>
					<!-- Remember to set the testFailureIgnore set to true if you want to 
						run cucumber.jvm.parallel.JSReportMergerer even if some of the tests failed. -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>merge-cucumber-js-reports</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<classpathScope>test</classpathScope>
							<mainClass>cucumber.jvm.parallel.JSReportMerger</mainClass>
							<arguments>
								<argument>target/cucumber-report/</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>merge-cucumber-json-reports</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<classpathScope>test</classpathScope>
							<mainClass>cucumber.jvm.parallel.JSONReportMerger</mainClass>
							<arguments>
								<argument>target/cucumber-report/</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<reportVersion>${allure.version}</reportVersion>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>



<!-- <profiles> to run one of the profiles defined below, simply add -P name_of_the_profile 
	to mvn command ie.: mvn clean test -P runTestsLocally <profile> <id>runTestsLocally</id> 
	<activation> <activeByDefault>true</activeByDefault> </activation> <properties> 
	<testNG.suiteXmlFile>src/test/resources/TestNGRunTestsLocally.xml</testNG.suiteXmlFile> 
	</properties> </profile> </profiles> -->
